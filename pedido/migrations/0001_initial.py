# Generated by Django 4.2.4 on 2024-03-30 17:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_doc', models.CharField(choices=[('CC', 'CC'), ('TI', 'TI'), ('CE', 'CE')], max_length=2, verbose_name='Tipo de documento')),
            ],
            options={
                'verbose_name': 'TipoDocumento',
                'verbose_name_plural': 'Tipo de documento',
                'db_table': 'TipoDocumento',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locality_names', models.CharField(choices=[('Usaquén', 'Usaquén'), ('Chapinero', 'Chapinero'), ('Santa Fe', 'Santa Fe'), ('San Cristóbal', 'San Cristóbal'), ('Usme', 'Usme'), ('Tunjuelito', 'Tunjuelito'), ('Bosa', 'Bosa'), ('Kennedy', 'Kennedy'), ('Fontibón', 'Fontibón'), ('Engativá', 'Engativá'), ('Suba', 'Suba'), ('Barrios Unidos', 'Barrios Unidos'), ('Teusaquillo', 'Teusaquillo'), ('Los Mártires', 'Los Mártires'), ('Antonio Nariño', 'Antonio Nariño'), ('Puente Aranda', 'Puente Aranda'), ('La candelaria', 'La candelaria'), ('Rafael Uribe Uribe', 'Rafael Uribe Uribe'), ('Ciudad Bolivar', 'Ciudad Bolivar'), ('Sumapaz', 'Sumapaz')], default='Usaquén', help_text='Seleccione su localidad', max_length=18, verbose_name='Localidad')),
            ],
            options={
                'verbose_name': 'Localidad',
                'verbose_name_plural': 'Localidades',
                'db_table': 'Localidad',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=25, verbose_name='Metodo de pago')),
                ('description', models.TextField(max_length=100, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Metodo de pago',
                'verbose_name_plural': 'Metodos de pago',
                'db_table': 'metodo_de_pago',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Dirección')),
                ('zip_code', models.PositiveIntegerField(blank=True, null=True, verbose_name='Código postal')),
                ('number_document', models.BigIntegerField(null=True, verbose_name='Numero de documento')),
                ('phone', models.BigIntegerField(blank=True, null=True, verbose_name='Telefono')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pedido.locality', verbose_name='Localidad')),
                ('type_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pedido.document', verbose_name='Tipo de documento')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuarios',
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
